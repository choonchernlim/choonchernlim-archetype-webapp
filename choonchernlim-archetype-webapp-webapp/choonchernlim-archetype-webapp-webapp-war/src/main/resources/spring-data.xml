<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- TODO Hibernate: Uncomment to configure Hibernate -->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <!--<jpa:repositories base-package="com.github.choonchernlim.choonchernlimArchetypeWebapp.dao"/>-->

    <!--<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">-->
        <!--<property name="entityManagerFactory" ref="entityManagerFactory"/>-->
    <!--</bean>-->

    <!--<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="packagesToScan" value="com.github.choonchernlim.choonchernlimArchetypeWebapp.entity"/>-->
        <!--<property name="jpaVendorAdapter">-->
            <!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>-->
        <!--</property>-->
        <!--<property name="jpaProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>-->
                <!--&lt;!&ndash;-->
                <!--Forces Hibernate to order SQL updates by the primary key value of the items being updated. -->
                <!--This will result in fewer transaction deadlocks in highly concurrent systems.-->
                <!--&ndash;&gt;-->
                <!--<prop key="hibernate.order_updates">true</prop>-->
                <!--<prop key="hibernate.show_sql">false</prop>-->
                <!--<prop key="hibernate.format_sql">false</prop>-->
                <!--&lt;!&ndash;-->
                <!--Instead of defining @Type(type="org.jadira.usertype.dateandtime.joda.PersistentLocalDateTime") on-->
                <!--all Joda Time object, auto register the user type-->
                <!--&ndash;&gt;-->
                <!--<prop key="jadira.usertype.autoRegisterUserTypes">true</prop>-->
                <!--&lt;!&ndash;-->
                <!--This is important for H2 to work with Hibernate. If this is not specified, then the `dbo` has to be-->
                <!--specified at domain classes, like this: `@Table(name = "dbo.domain")`.-->
                <!--&ndash;&gt;-->
                <!--<prop key="hibernate.default_schema">dbo</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; Redirects Hibernate's JBoss Logging to SFL4J &ndash;&gt;-->
    <!--<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
        <!--<property name="targetObject">-->
            <!--<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
                <!--<property name="targetClass" value="java.lang.System"/>-->
                <!--<property name="targetMethod" value="getProperties"/>-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="targetMethod" value="putAll"/>-->
        <!--<property name="arguments">-->
            <!--<util:properties>-->
                <!--<prop key="org.jboss.logging.provider">slf4j</prop>-->
            <!--</util:properties>-->
        <!--</property>-->
    <!--</bean>-->
</beans>
