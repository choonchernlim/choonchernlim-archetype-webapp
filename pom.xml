<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.choonchernlim</groupId>
        <artifactId>spring-boot-ci</artifactId>
        <version>0.4.0</version>
        <relativePath/>
    </parent>

    <groupId>com.github.choonchernlim</groupId>
    <artifactId>choonchernlim-archetype-webapp</artifactId>
    <packaging>war</packaging>
    <version>0.0.0</version>

    <properties>
        <ssl.keystore>${project.basedir}/src/test/resources/tomcat/keystore.jks</ssl.keystore>
        <ssl.keypass>secret</ssl.keypass>
        <ssl.storepass>secret</ssl.storepass>

        <swagger.version>2.9.2</swagger.version>
        <spring-boot-mail.version>0.1.4</spring-boot-mail.version>
        <git-commit-id-plugin.version>2.2.5</git-commit-id-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.choonchernlim</groupId>
                <artifactId>spring-boot-mail</artifactId>
                <version>${spring-boot-mail.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Scope: Provided -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Scope: Compile -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.jtds</groupId>
            <artifactId>jtds</artifactId>
        </dependency>

        <!-- Scope: Compile: Custom -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.choonchernlim</groupId>
            <artifactId>spring-boot-mail</artifactId>
        </dependency>

        <!-- Scope: Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <configuration>
                    <workingDirectory>src/main/frontend</workingDirectory>
                    <installDirectory>src/main/frontend</installDirectory>
                </configuration>
                <executions>
                    <!-- Install local node and yarn within the project to ensure everyone use the same version. -->
                    <execution>
                        <id>install-node-and-yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <configuration>
                            <!-- Use latest LTS version... check here: https://nodejs.org/en/ -->
                            <nodeVersion>v8.11.3</nodeVersion>
                            <yarnVersion>v1.7.0</yarnVersion>
                        </configuration>
                    </execution>
                    <!-- `yarn install` to install any dependencies listed in `package.json`. -->
                    <execution>
                        <id>yarn-install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <!--
                            To fix "There appears to be trouble with your network connection. Retrying..." on Windows.
                            See https://github.com/yarnpkg/yarn/issues/4890
                            -->
                            <arguments>--ignore-optional --network-timeout 1000000</arguments>
                            <environmentVariables>
                                <!--
                                Don't auto install Git hook with Husky because TFS Build will hang for some reason.
                                See https://github.com/typicode/husky/blob/master/DOCS.md
                                -->
                                <HUSKY_SKIP_INSTALL>true</HUSKY_SKIP_INSTALL>
                            </environmentVariables>
                        </configuration>
                    </execution>
                    <!-- `yarn run build` in `generate-resources` phase to create production build. -->
                    <execution>
                        <id>production-build</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>build</arguments>
                        </configuration>
                    </execution>
                    <!-- `yarn run ci` in `test` phase to run unit test/code coverage and generate CI reports. -->
                    <execution>
                        <id>ci-reports</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <arguments>ci</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
            For generating self-signed certificate to use HTTPS on embedded server.
            To generate, run `mvn keytool:clean keytool:generateKeyPair`
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <configuration>
                    <keystore>${ssl.keystore}</keystore>
                    <keypass>${ssl.keypass}</keypass>
                    <storepass>${ssl.storepass}</storepass>
                    <dname>cn=localhost</dname>
                    <alias>tomcat</alias>
                    <keyalg>RSA</keyalg>
                    <keysize>2048</keysize>
                    <sigalg>SHA256withRSA</sigalg>
                    <validity>99999</validity>
                    <verbose>true</verbose>
                </configuration>
            </plugin>

            <!--
             For providing Git info for Spring Boot Actuator's "info" endpoint.
             -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${git-commit-id-plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <!--
        "skip-frontend-build" profile.

        Profile to skip frontend production bundle build to speed up Maven lifecycle.
        -->
        <profile>
            <id>skip-frontend-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>